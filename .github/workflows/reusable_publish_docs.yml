name: Reusable publish documentation

# see .github/workflows/on_push_docs.yml for docs

env:
  ORIGIN: aws-powertools/powertools-lambda-python

on:
  workflow_call:
    inputs:
      version:
        description: "Version to build and publish docs (1.28.0, develop)"
        required: true
        type: string
      alias:
        description: "Alias to associate version (latest, stage)"
        required: true
        type: string
      detached_mode:
        description: "Whether it's running in git detached mode to ensure git is sync'd"
        required: false
        default: false
        type: boolean
      git_ref:
        description: "Branch or commit ID to checkout from"
        required: false
        type: string
        default: develop

permissions:
  id-token: write  # trade JWT token for AWS credentials in AWS Docs account
  contents: write  # push to gh-pages
  pages: write     # deploy gh-pages website

jobs:
  publish_docs:
    # Force Github action to run only a single job at a time (based on the group name)
    # This is to prevent "race-condition" in publishing a new version of doc to `gh-pages`
    concurrency:
      group: on-docs-rebuild
    runs-on: ubuntu-latest
    environment: "Docs"
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3.5.3
        with:
          fetch-depth: 0
          ref: ${{ inputs.git_ref }}
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0 # v4.6.1
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Install dependencies
        run: make dev
      - name: Git client setup
        run: |
          git config --global user.name Docs deploy
          git config --global user.email aws-devax-open-source@amazon.com
      - name: Git refresh tip (detached mode)
        # Git Detached mode (release notes) doesn't have origin
        if: ${{ inputs.detached_mode }}
        run: |
          git config pull.rebase true
          git config remote.origin.url >&- || git remote add origin https://github.com/"$ORIGIN"
          git pull origin "$BRANCH"
        env:
          BRANCH: ${{ inputs.git_ref }}
      - name: Build docs website and API reference
        env:
          VERSION: ${{ inputs.version }}
          ALIAS: ${{ inputs.alias }}
        run: |
          make release-docs VERSION="$VERSION" ALIAS="$ALIAS"
          poetry run mike set-default --push latest

      - name: Release API docs
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # v3.9.3
        env:
          VERSION: ${{ inputs.version }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./api
          keep_files: true
          destination_dir: ${{ env.VERSION }}/api
      - name: Release API docs to latest
        if: ${{ inputs.alias == 'latest' }}
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./api
          keep_files: true
          destination_dir: latest/api
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_DOCS_ROLE_ARN }}
      - name: Copy API Docs
        run: |
          cp -r api site/
      - name: Deploy Docs (Version)
        env:
          VERSION: ${{ inputs.version }}
          ALIAS: ${{ inputs.alias }}
        run: |
          aws s3 sync \
            site/ \
            s3://${{ secrets.AWS_DOCS_BUCKET }}/lambda-python/${{ env.VERSION }}/
      - name: Deploy Docs (Alias)
        env:
          VERSION: ${{ inputs.version }}
          ALIAS: ${{ inputs.alias }}
        run: |
          aws s3 sync \
            site/ \
            s3://${{ secrets.AWS_DOCS_BUCKET }}/lambda-python/${{ env.ALIAS }}/
